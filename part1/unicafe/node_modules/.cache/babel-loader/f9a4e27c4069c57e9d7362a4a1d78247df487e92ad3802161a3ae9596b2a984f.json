{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\95753\\\\Desktop\\\\react\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticLine = _ref => {\n  let {\n    text,\n    val\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n_c = StatisticLine;\nconst Display = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  const sum = good - bad;\n  const num = good + neutral + bad;\n  if (num) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        width: \"150px\",\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"good\",\n          val: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"neutral\",\n          val: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"bad\",\n          val: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"all\",\n          val: sum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"average\",\n          val: sum / num\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positive\",\n        val: Math.round(good / num * 10000) / 100 + \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \"//  \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"positive \", Math.round(good / num * 10000) / 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), \"}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No feedback given\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Display;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGood(good + 1),\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNeutral(neutral + 1),\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setBad(bad + 1),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","StatisticLine","text","val","Display","good","neutral","bad","sum","num","Math","round","App","setGood","setNeutral","setBad"],"sources":["C:/Users/95753/Desktop/react/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\n\n\nconst StatisticLine = ({text, val}) => (\n  <tr>\n    <td>{text}</td>\n    <td>{val}</td>\n  </tr>\n)\n\nconst Display = ({ good, neutral, bad }) => {\n  const sum = good - bad\n  const num = good + neutral + bad\n  if (num) {\n    return (\n      <div>\n        <table  width=\"150px\">\n        <StatisticLine text=\"good\" val={good} />\n        <StatisticLine text=\"neutral\" val={neutral} />\n        <StatisticLine text=\"bad\" val={bad} />\n        <StatisticLine text=\"all\" val={sum} />\n        <StatisticLine text=\"average\" val={sum / num} />\n        </table >\n   \n        <StatisticLine text=\"positive\" val={Math.round(good / num * 10000) / 100 + \"%\"} />\n        \n      //  <p>positive {Math.round(good / num * 10000) / 100}%</p>\n        }\n      </div>\n    )\n  }\n\n  return (\n    <p>No feedback given</p>\n  )\n\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={() => setGood(good + 1)}>good</button>\n      <button onClick={() => setNeutral(neutral + 1)}>neutral</button>\n      <button onClick={() => setBad(bad + 1)}>bad</button>\n      <h1>statistics</h1>\n      <Display good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}